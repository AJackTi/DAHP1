package getInformation;

/*
TEN SV: DANG VO DUC TRONG	MSSV: 15055721
TEN SV: NGUYEN CHI THANG	MSSV: 15055101
GIANG VIEN HUONG DAN: HUYNH THAI HOC
link github: https://github.com/AjackTi/DAHP1
*/

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;


public class extractComment {
	public static ArrayList<String> fillter_comment(String link)
	{
		// public static ArrayList<String> fillter_comment(String link)
		
		// TODO Auto-generated method stub
		// KHAI BÁO BIẾN Ở ĐÂY:
		URL url;
		String content = "";
		ArrayList<String> arr_list2 = new ArrayList<>();
		ArrayList<String> arrTen3 = new ArrayList<>();
		ArrayList<String> arrcmtt = new ArrayList<>();
		 Đây là 1 trang web nhánh của kenh14.vn chứa những comment(đăng ký, đăng nhập thông qua trang web này)
		// Ở đây nhóm chưa làm được trích xuất hoàn toàn tất cả các thẻ của website này, mà chỉ xem trong web này có chứa web này, 
		//  nên nhóm quyết định lấy trang này chỉ để trích xuất các comment ra thôi. 
		// Còn riêng phần trích xuất các phần khác(số điện thoại, email, ... ) thì nhóm sẽ lấy website kenh14.vn để trích xuất.
				
		//String link = "https://comment.vietid.net/comments?app_key=d9c694bd04eb35d96f1d71a84141d075&content_url=http://kenh14.vn/news-20170910231849133.chn&news_title=SE9UOiBNQU1BIDIwMTcgc%2bG6vSDEkcaw4bujYyB04buVIGNo4bupYyB04bqhaSBWaeG7h3QgTmFtIHbDoG8gMjUvMTEh&num_count=5&debugcache=1&min=0&scroll=0&http_referer=http://kenh14.vn/hot-mama-2017-se-duoc-to-chuc-tai-viet-nam-vao-25-11-20170910231849133.chn&verify=1&verify_flag=17db33bd9de68488adfcf7c9dfbfd975&funny_flag=0&height=238&iframe_comment_id=mingid_comment_iframe&comment_flag=0&news_url_short=musik&real_time=undefined&is_hidden_comment=0";
		// Link gốc chứa trang comment này(kenh14.vn): http://kenh14.vn/hot-mama-2017-se-duoc-to-chuc-tai-viet-nam-vao-25-11-20170910231849133.chn
		// Ta cũng có thay thế bằng 1 link khác cũng được.
		// VD:
		// String Str_link = "https://comment.vietid.net/comments?app_key=d9c694bd04eb35d96f1d71a84141d075&content_url=http://kenh14.vn/news-20170927094249086.chn&news_title=TuG7ryBzaW5oIEjhuqNpIETGsMahbmcgYuG7iyBi4bqhbiBiw6ggdHLDqnUgY2jhu41jLCBjaMawYSB04burbmcgbeG6t2Mgw6FvIGTDoGkgdsOsIHPhu5EgxJFvIHbDsm5nIDEgaMahbiAxMDBjbQ%3d%3d&num_count=5&debugcache=1&min=0&scroll=0&http_referer=http://kenh14.vn/nu-sinh-hai-duong-bi-ban-be-treu-choc-chua-tung-mac-ao-dai-vi-so-do-vong-1-hon-100cm-20170927094249086.chn&verify=1&verify_flag=a2e2de62655e36d81aced341c757c390&funny_flag=0&height=238&iframe_comment_id=mingid_comment_iframe&comment_flag=0&news_url_short=doi-song&real_time=undefined&is_hidden_comment=0"
		 link = "https://comment.vietid.net/comments?app_key=d9c694bd04eb35d96f1d71a84141d075&content_url=http://kenh14.vn/news-20171206214108548.chn&news_title=R2nhu69hIGzDuW0geMO5bSBEdXkgUGjGsMahbmcgLSBMw6ogR2lhbmcsIHNhbyBWaeG7h3QgYuG7qWMgeMO6YyBwaOG6o24gxJHhu5FpICJTYXUgw6FuaCBow6BvIHF1YW5nIg%3d%3d&num_count=5&debugcache=1&min=0&scroll=0&http_referer=http://kenh14.vn/giua-lum-xum-duy-phuong-le-giang-sao-viet-buc-xuc-phan-doi-sau-anh-hao-quang-20171206214108548.chn&verify=1&verify_flag=4dc027e62ed2e3da5784df3ac1f8e890&funny_flag=0&height=238&iframe_comment_id=mingid_comment_iframe&comment_flag=0&news_url_short=star&real_time=undefined&is_hidden_comment=0#"; 
		// Trích xuất tất cả các thẻ của trang;
		try {
			url = new URL(link);
					
			URLConnection connection = url.openConnection();
			
			InputStream inputStream = connection.getInputStream();
					
			BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));
					
			String line = br.readLine();
								
			while(line !=null) {
				content += line;
				line = br.readLine();
				}
					br.close();
				}
		catch (Exception e) {
			e.printStackTrace();
			}
		
		
		// Bắt đầu ta phải lấy tất cả các tag chứa thông tin cần trích xuất.
		// Lấy tất cả các thẻ dạng "<div class="cent-cont">" là thẻ chứa comment và thông tin người comment
		String patterntag = "<div class=\"cent-cont\">(.+?)</div> </div>";
		Pattern pttag = Pattern.compile(patterntag);
		Matcher mttag = pttag.matcher(content);
		ArrayList<String> arrTag = new ArrayList<>();
		while(mttag.find())
		{
			arrTag.add(mttag.group(0));
		}
		
		// Lọc id và comment tương ứng:
		// Lọc tên người comment
		for (String string : arrTag) {
			String patternten = "<a class=\"full-name\" title=\"\" target=(.+?)</a>"; 
			Pattern ptten = Pattern.compile(patternten);
			Matcher mtten = ptten.matcher(string);
			String content1 = "";
			if(mtten.find())
			{
				content1 += mtten.group(0);
			}
			patternten = ">(.+?)<";
			ptten = Pattern.compile(patternten);
			mtten = ptten.matcher(content1);
			String content2 = "";
			if(mtten.find())
			{
				content2 += mtten.group(0);
			}
			patternten = "[^>](.+?){1,}[^<]";
			ptten = Pattern.compile(patternten);
			mtten = ptten.matcher(content2);
			String tencmt = "";
			while(mtten.find())
			{
				tencmt = mtten.group(0);
				arrTen3.add(tencmt);
			}
			
			// Lọc comment top:
			// Đây là pattern 1
			String patterntop = "<div class=\"cm-content\"> (.+?) </div>";
			Pattern ptop = Pattern.compile(patterntop);
			Matcher mtop = ptop.matcher(string);
			String cmString = null;
			while(mtop.find())
			{
				cmString += mtop.group(0);
			}
			
			// Đây là pattern 2
			patterntop = "> (.+?) </";
			ptop = Pattern.compile(patterntop);
			mtop = ptop.matcher(cmString);
			String cmString2 = "";
			ArrayList<String> arr_listtop = new ArrayList<>();
			while(mtop.find())
			{
				cmString2 = mtop.group(0);
				arr_listtop.add(mtop.group(0));
				cmString2 = "";
			}
			
			// Đây là pattern 3
			patterntop = "[^>](.+?){1,}[^</]";
			ptop = Pattern.compile(patterntop);
			String commentcheck = "";
			for (String str : arr_listtop) {
				mtop = ptop.matcher(str);
				while(mtop.find())
				{
					commentcheck = mtop.group(0);
					if (commentcheck.toLowerCase().contains("<span id=") || commentcheck.toLowerCase().contains("<input type="))
					{
						continue;
					}
					else
					{
						arr_list2.add(commentcheck);
					}
				}
			}
			
			// Lọc những comment thường(không lọt vào top):
			// Ở đây, ta có 3 phần khác nhau để lọc ra những comment nào không được top.
			// Đây là pattern 1.
			String patterncmtt = "<span id=\"\\w{1,}\">\\s(.+?)\\s</span>";
			Pattern pcmtt = Pattern.compile(patterncmtt);
			Matcher mcmtt = pcmtt.matcher(string);
			String cmttStr1 = "";
			ArrayList<String> arrcmtt1 = new ArrayList<>();
			while(mcmtt.find())
			{
				cmttStr1 += mcmtt.group(0);
			}
			
			// Đây là pattern 2.
			patterncmtt = ">\\s(.+?)\\s</";
			pcmtt = Pattern.compile(patterncmtt);
			mcmtt = pcmtt.matcher(cmttStr1);
			String cmttStr2 = "";
			while(mcmtt.find())
			{
				cmttStr2 += mcmtt.group(0);
			}
			
			// Đây là pattern 3.
			patterncmtt = "\\s(.+?){1,}\\s";
			pcmtt = Pattern.compile(patterncmtt);
			mcmtt = pcmtt.matcher(cmttStr2);
			
			while(mcmtt.find())
			{
				arrcmtt.add(mcmtt.group(0));
			}
			
		}
		ArrayList<String> allComment = new ArrayList<>();
		allComment.addAll(arr_list2);
		allComment.addAll(arrcmtt);
		ArrayList<String> arraycomment = new ArrayList<>();
		for(int i=0; i<arrTen3.size(); i++)
		{
			arraycomment.add(arrTen3.get(i) + ": " + allComment.get(i) + "\n");
		}
		
		// Có 1 lưu ý nhỏ ở đây là: có 1 vài comment có chứa lẫn thẻ <img src="">, đây là cũng là comment của khách, thẻ này là do khách comment icon nên dính vào comment không thể tách ra riêng được.
		return arrTag;
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String link = "";
		for (String string : fillter_comment(link)) {
			System.out.println(string);
		}
	}

}
