package getInformation;

/*
TEN SV: DANG VO DUC TRONG	MSSV: 15055721
TEN SV: NGUYEN CHI THANG	MSSV: 15055101
GIANG VIEN HUONG DAN: HUYNH THAI HOC
link github: https://github.com/AjackTi/DAHP1
*/

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class buildGUI extends JFrame implements ActionListener{
	private JLabel lbJLabel, label, label1;
	JButton btButton;
	JTextField textField;
	JTextArea area;
	JScrollPane scroll;
	JScrollPane scroll1;
	JCheckBox check1;
	JCheckBox check2;
	JCheckBox check3;
	JCheckBox check4;
	
	static boolean check1_check = false;
	static boolean check2_check = false;
	static boolean check3_check = false;
	static boolean check4_check = false;
	
	static String tt;
	static String str_result = "";
	
	public buildGUI()
	{
		setSize(800, 300);
		setTitle("Extract information");
		setResizable(true);
		JPanel p1 = new JPanel();
		JPanel p2 = new JPanel();
				
		add(p1, BorderLayout.NORTH);
		p1.add(p2);
		p2.add(lbJLabel = new JLabel("Link"));
		p2.add(textField = new JTextField(50));
		p2.add(btButton = new JButton("Continue"));
		
		JPanel p3 = new JPanel();
		add(p3,BorderLayout.CENTER);
		p3.add(check1 = new JCheckBox("Comment"));
		p3.add(check2 = new JCheckBox("Email"));
		p3.add(check3 = new JCheckBox("Link"));
		p3.add(check4 = new JCheckBox("Images"));
		
		check1.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent me)
			{
				check1_check = true;
			}
		});
		
		check2.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent me)
			{
				check2_check = true;
			}
		});
		
		check3.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent me)
			{
				check3_check = true;
			}
		});
		
		check4.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent me)
			{
				check4_check = true;
			}
		});
		
		JPanel p4 = new JPanel();
		add(p4, BorderLayout.SOUTH);
		p4.add(label = new JLabel("Results: "));
		area = new JTextArea(10, 50);
		scroll = new JScrollPane (area);
		scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
		area.setEditable(true);
		p4.add(scroll);
		
		btButton.addActionListener(this);
	}
	
	public static void main(String[] args) throws FileNotFoundException, UnsupportedEncodingException{
		// TODO Auto-generated method stub
		new buildGUI().setVisible(true);
	}
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		// Xuất kết quả ra textarea
		// Comment
		String str_result = "";
		if(check1_check == true)
		{
			str_result += "Kết quả của quá trình filter comment: " + "\n";
			ArrayList<String> arr_com = null;
			try
			{
				arr_com = extractComment.fillter_comment(textField.getText()); // k co sao ma gan vao 1 bien kieu arraylist dc, phai kiem tra truoc da
			}
			catch(Exception excep)
			{
				// TODO: handle exception
				arr_com = new ArrayList<>();
			}
			
			// Nếu không nhập link vào mà click thì kết quả sẽ là null
			if(arr_com.isEmpty())
			{
				area.setText("Không có dữ liệu");
			}
			else
			{
				for (String string : arr_com) {
					str_result += string;
				}
			}
		}
		// Email
		if(check2_check == true)
		{
			str_result += "Kết quả của quá trình filter email: " + "\n";
			String str_email = extractEmailLinkImages.filterEmail(Fetch_Html(textField.getText()));
			str_result += str_email;
		}
		
		// Link
		if(check3_check == true)
		{
			str_result += "Kết quả của quá trình filter link: " + "\n";
			ArrayList<String> arr_link = extractEmailLinkImages.filterLink(Fetch_Html(textField.getText()));
			for (String string : arr_link) {
				str_result += string;
			}
		}
		//Images
		if(check4_check == true)
		{
			str_result += "Kết quả của quá trình filter images: " + "\n";
			try {
				ArrayList<String> arr_img = extractEmailLinkImages.filterImages((Fetch_Html(textField.getText())));
				for (String string : arr_img) {
					str_result += string;
				}
			} catch (IOException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
		}
		area.setText("");
		area.setText(str_result);
		
		try {
			create_and_write_file("result.txt", str_result);
		} catch (FileNotFoundException | UnsupportedEncodingException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}
	}
	public static String Fetch_Html(String url_input)
	{
		// Get HTML
		String content = "";
		try {
			
	        // get URL content
	        String urlStr = url_input;
	        URL url = new URL(urlStr);
	        URLConnection connection = url.openConnection();

	        InputStream inputStream = connection.getInputStream();
	            
	        // open the stream and put it into BufferedReader
	        BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));

	        String line = br.readLine();
				
			while(line !=null) {
				content += line;
				line = br.readLine();
			}
	        br.close();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return content;
	}
	public static void create_and_write_file(String namefile, String content) throws FileNotFoundException, UnsupportedEncodingException
	{
		BufferedWriter bw = null;
		FileWriter fw = null;
		try {
			fw = new FileWriter(namefile);
			bw = new BufferedWriter(fw);
			bw.write(content);
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {

				if (bw != null)
					bw.close();

				if (fw != null)
					fw.close();

			} catch (IOException ex) {

				ex.printStackTrace();
			}

		}
	}
}